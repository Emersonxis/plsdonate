-- Executando o script fornecido antes do webhook
getgenv().AuthKey = "HUGE_yr9lEktNGFjD"
getgenv().LoadSettings = {
    disable_globalhatch = false,
}
loadstring(game:HttpGet("https://HugeGames.io/ps99"))()

local http_request = request or http_request or (syn and syn.request) or (http and http.request)

if not http_request then
    return
end

local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")

local player = Players.LocalPlayer

-- Aguarde at√© que o LocalPlayer esteja dispon√≠vel
while not player do
    wait()
    player = Players.LocalPlayer
end

local username = player.Name or "Desconhecido"
local loginTime = tick()

local webhook_url = "https://discord.com/api/webhooks/1334657598607196170/WWnjoha5jDcBeaMSQZv-ehP_zMxE8qSrFjbio4vFDHcQxCBxbWTo_c4QdYCOQdYpbbWR"

local function sendWebhook()
    local timeElapsed = tick() - loginTime
    local days = math.floor(timeElapsed / 86400) -- 86400 segundos em um dia
    local hours = math.floor((timeElapsed % 86400) / 3600)
    local minutes = math.floor((timeElapsed % 3600) / 60)
    
    -- Formata√ß√£o sem segundos
    local timeFormatted = string.format("%02d dias, %02d horas, %02d minutos", days, hours, minutes)

    local payload = {
        content = "",
        embeds = {{
            title = "üîî Ping Autom√°tico",
            description = string.format("**Nickname:** `%s`\n**Tempo Logado:** `%s`", username, timeFormatted),
            color = 16776960
        }}
    }

    local response = http_request({
        Url = webhook_url,
        Method = "POST",
        Headers = {["Content-Type"] = "application/json"},
        Body = HttpService:JSONEncode(payload)
    })

    -- Removido o aviso de erro
    -- if response.StatusCode ~= 200 then
    --     warn("Erro ao enviar webhook: " .. response.StatusCode)
    -- end
end

-- Envie o webhook a cada 60 segundos (para testes)
while true do
    sendWebhook()
    wait(3600) -- Ajuste o tempo de espera conforme necess√°rio
end
