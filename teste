-- Carregar a Library do jogo
local Library = require(game:GetService("ReplicatedStorage"):WaitForChild("Framework"):WaitForChild("Library"))
local NameID = {}

-- Carregar nomes e IDs dos pets
for i, v in pairs(Library.Directory.Pets) do
    NameID[i] = v.name
end

-- Inicializa a GUI
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local TitleLabel = Instance.new("TextLabel")
local FuseButton = Instance.new("TextButton")
local ConvertButton = Instance.new("TextButton")
local ClaimButton = Instance.new("TextButton")
local PetsAmountLabel = Instance.new("TextLabel")
local PetsAmountSlider = Instance.new("TextBox")
ScreenGui.Parent = game.CoreGui

-- Configuração da GUI principal
ScreenGui.Name = "AutoFarmGUI"
Frame.Name = "Frame"
Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
Frame.Position = UDim2.new(0.4, 0, 0.3, 0)
Frame.Size = UDim2.new(0, 300, 0, 250)
Frame.Visible = true
Frame.Active = true
Frame.Draggable = true  -- Torna a GUI móvel para dispositivos móveis

TitleLabel.Name = "TitleLabel"
TitleLabel.Parent = Frame
TitleLabel.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
TitleLabel.Size = UDim2.new(0, 250, 0, 50)
TitleLabel.Position = UDim2.new(0.1, 0, 0.05, 0)
TitleLabel.Text = "Auto Farm Options"

-- Botão para Auto Fuse
FuseButton.Name = "FuseButton"
FuseButton.Parent = Frame
FuseButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
FuseButton.Size = UDim2.new(0, 250, 0, 50)
FuseButton.Position = UDim2.new(0.1, 0, 0.25, 0)
FuseButton.Text = "Iniciar Auto Fuse"

-- Botão para Auto Convert Dark Matter
ConvertButton.Name = "ConvertButton"
ConvertButton.Parent = Frame
ConvertButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
ConvertButton.Size = UDim2.new(0, 250, 0, 50)
ConvertButton.Position = UDim2.new(0.1, 0, 0.45, 0)
ConvertButton.Text = "Iniciar Auto Convert Dark Matter"

-- Botão para Auto Claim Dark Matter Pets
ClaimButton.Name = "ClaimButton"
ClaimButton.Parent = Frame
ClaimButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
ClaimButton.Size = UDim2.new(0, 250, 0, 50)
ClaimButton.Position = UDim2.new(0.1, 0, 0.65, 0)
ClaimButton.Text = "Iniciar Auto Claim Dark Matter Pets"

-- Label e Slider para quantidade de pets
PetsAmountLabel.Name = "PetsAmountLabel"
PetsAmountLabel.Parent = Frame
PetsAmountLabel.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
PetsAmountLabel.Position = UDim2.new(0.1, 0, 0.85, 0)
PetsAmountLabel.Size = UDim2.new(0, 250, 0, 20)
PetsAmountLabel.Text = "Quantidade de Pets para Fuse"

PetsAmountSlider.Name = "PetsAmountSlider"
PetsAmountSlider.Parent = Frame
PetsAmountSlider.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
PetsAmountSlider.Position = UDim2.new(0.1, 0, 0.95, 0)
PetsAmountSlider.Size = UDim2.new(0, 250, 0, 30)
PetsAmountSlider.PlaceholderText = "Número de pets"
PetsAmountSlider.Text = tostring(FusePetsAmmount or 3)

-- Variáveis de controle
local StartAutoFuse = false
local StartAutoConvert = false
local StartAutoClaim = false
local FusePetsAmmount = 3

-- Função de Auto Fuse
local function AutoFusePets()
    while StartAutoFuse do
        task.wait(1)
        pcall(function()
            local selectedPets = {}
            for _, pet in pairs(Library.Save.Get().Pets) do
                local petRarity = (pet.g and 'Gold') or (pet.r and 'Rainbow') or (pet.dm and 'Dark Matter') or 'Normal'
                local petString = petRarity .. NameID[pet.id]
                
                if selectedPets[petString] then
                    table.insert(selectedPets[petString], pet.uid)
                else
                    selectedPets[petString] = {}
                    table.insert(selectedPets[petString], pet.uid)
                end
            end
            
            for _, pets in pairs(selectedPets) do
                if #pets >= FusePetsAmmount then
                    local fuseSelection = {}
                    for i = 1, FusePetsAmmount do
                        fuseSelection[i] = pets[i]
                    end
                    workspace.__ITEMS.__REMOTES["fuse pets"]:InvokeServer({fuseSelection})
                end
            end
        end)
    end
end

-- Função de Auto Convert Dark Matter
local function AutoConvertToDarkMatter()
    while StartAutoConvert do
        task.wait(1)
        pcall(function()
            local PetsTable = {}
            for _, pet in pairs(Library.Save.Get().Pets) do
                if #PetsTable < FusePetsAmmount then
                    table.insert(PetsTable, pet.uid)
                end
            end
            workspace.__ITEMS.__REMOTES["convert to dark matter"]:InvokeServer({PetsTable})
        end)
    end
end

-- Função de Auto Claim Dark Matter Pets
local function AutoClaimDarkMatterPets()
    while StartAutoClaim do
        task.wait(15)
        pcall(function()
            for i, v in pairs(Library.Save.Get().DarkMatterQueue) do
                if math.floor(v.readyTime - os.time()) < 0 then
                    workspace.__ITEMS.__REMOTES["redeem dark matter pet"]:InvokeServer({[1] = i})
                end
            end
        end)
    end
end

-- Conectar ações aos botões
FuseButton.MouseButton1Click:Connect(function()
    StartAutoFuse = not StartAutoFuse
    if StartAutoFuse then
        FuseButton.Text = "Parar Auto Fuse"
        spawn(AutoFusePets)
    else
        FuseButton.Text = "Iniciar Auto Fuse"
    end
end)

ConvertButton.MouseButton1Click:Connect(function()
    StartAutoConvert = not StartAutoConvert
    if StartAutoConvert then
        ConvertButton.Text = "Parar Auto Convert Dark Matter"
        spawn(AutoConvertToDarkMatter)
    else
        ConvertButton.Text = "Iniciar Auto Convert Dark Matter"
    end
end)

ClaimButton.MouseButton1Click:Connect(function()
    StartAutoClaim = not StartAutoClaim
    if StartAutoClaim then
        ClaimButton.Text = "Parar Auto Claim Dark Matter Pets"
        spawn(AutoClaimDarkMatterPets)
    else
        ClaimButton.Text = "Iniciar Auto Claim Dark Matter Pets"
    end
end)

-- Conectar o slider para ajustar a quantidade de pets para fuse
PetsAmountSlider.FocusLost:Connect(function()
    local amount = tonumber(PetsAmountSlider.Text)
    if amount and amount > 0 then
        FusePetsAmmount = amount
    else
        PetsAmountSlider.Text = tostring(FusePetsAmmount)
    end
end)
